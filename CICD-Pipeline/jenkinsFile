pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
           }
         }
  stages {
    stage('Checkout') {
      steps {
                sh "checking"
                git branch: 'main', url: 'https://github.com/divyaraniduggappa/Jenkins-Docker-K8S-ArgoCD.git'
            }
         }
         
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd CICD-Pipeline/ && mvn clean package'
           }
        }  
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "dockerdivya9/cicd-pipeline:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('dockerhub')
                   }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "dockerhub") { dockerImage.push() }
               }
            }
         } 
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Docker-K8S-ArgoCD"
            GIT_USER_NAME = "divyaraniduggappa"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "dvgdivya@gmail.com"
                    git config user.name "divyaraniduggappa"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" manifests/deployment.yml
                    git add manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
                     }
              }
         } 
         
       }
  }
